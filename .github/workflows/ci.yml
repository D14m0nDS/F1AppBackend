name: CI

on:
  push:
    branches:
      - main
  pull_request:


jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U postgres && break
            sleep 3
          done

      - name: Run database migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
          FLASK_APP: run.py
        run: |
          flask db upgrade

      - name: Run pytest
        env:
          FLASK_ENV: testing
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
          FLASK_APP: run.py
        run: |
          pytest --maxfail=1 --disable-warnings -q
